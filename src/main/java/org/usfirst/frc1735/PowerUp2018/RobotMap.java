// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1735.PowerUp2018;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import com.ctre.phoenix.motorcontrol.can.WPI_VictorSPX;
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static WPI_TalonSRX driveTrainLeftFollower;
    public static WPI_TalonSRX driveTrainRightFollower;
    public static WPI_TalonSRX driveTrainLeftMotor;
    public static WPI_TalonSRX driveTrainRightMotor;
    public static DifferentialDrive driveTrainDifferentialDrive1;
    public static WPI_VictorSPX driveTrainLeftFollowerVictor;
    public static WPI_VictorSPX driveTrainRightFollowerVictor;
    public static WPI_TalonSRX elevatorElevatorMotor;
    public static SpeedController clampsDeployerDeployMotor;
    public static Compressor clampsCompressor;
    public static DoubleSolenoid clampsDoubleSolenoid;
    public static SpeedController piggybackBarSpeedController1;
    public static DoubleSolenoid hookDoubleSolenoid;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainLeftFollower = new WPI_TalonSRX(3);
        
        
        driveTrainRightFollower = new WPI_TalonSRX(4);
        
        
        driveTrainLeftMotor = new WPI_TalonSRX(1);
        
        
        driveTrainRightMotor = new WPI_TalonSRX(2);
        
        
        driveTrainDifferentialDrive1 = new DifferentialDrive(driveTrainLeftMotor, driveTrainRightMotor);
        LiveWindow.addActuator("DriveTrain", "Differential Drive 1", driveTrainDifferentialDrive1);
        driveTrainDifferentialDrive1.setSafetyEnabled(true);
        driveTrainDifferentialDrive1.setExpiration(0.1);
        driveTrainDifferentialDrive1.setMaxOutput(1.0);

        driveTrainLeftFollowerVictor = new WPI_VictorSPX(6);
        
        
        driveTrainRightFollowerVictor = new WPI_VictorSPX(7);
        
        
        elevatorElevatorMotor = new WPI_TalonSRX(5);
        
        
        clampsDeployerDeployMotor = new Spark(8);
        LiveWindow.addActuator("ClampsDeployer", "Deploy Motor", (Spark) clampsDeployerDeployMotor);
        clampsDeployerDeployMotor.setInverted(true);
        clampsCompressor = new Compressor(0);
        LiveWindow.addActuator("Clamps", "Compressor", clampsCompressor);
        
        clampsDoubleSolenoid = new DoubleSolenoid(0, 0, 1);
        LiveWindow.addActuator("Clamps", "Double Solenoid", clampsDoubleSolenoid);
        
        piggybackBarSpeedController1 = new Spark(9);
        LiveWindow.addActuator("PiggybackBar", "Speed Controller 1", (Spark) piggybackBarSpeedController1);
        piggybackBarSpeedController1.setInverted(false);
        hookDoubleSolenoid = new DoubleSolenoid(0, 2, 3);
        LiveWindow.addActuator("Hook", "Double Solenoid", hookDoubleSolenoid);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS   
    }
}
