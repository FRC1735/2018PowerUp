// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1735.PowerUp2018.commands;

import edu.wpi.first.wpilibj.command.ConditionalCommand;
import org.usfirst.frc1735.PowerUp2018.Robot;
import org.usfirst.frc1735.PowerUp2018.subsystems.DriveTrain;

/**
 * Conditionally turn with an inverted angle if we are on the LEFT side of the field for starting position
 */
public class ConditionalTurn extends ConditionalCommand {


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public ConditionalTurn() {
      super(new Turn(), new Turn());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

    }

    // This version allows for arguments to be specified.  The default is not terribly useful.
    public ConditionalTurn(double angle, int mode) {
  	  // Assumption:  user specifies angle based on robot placement on RIGHT SIDE of field; we reverse here if the SmartDashboard says we are placed on LEFT side.
    	super(new Turn(angle, mode), new Turn(-angle, mode)); //right side, left side
    	m_mode = mode; // Save so we can query it in the condition function
    }

    @Override
    protected boolean condition(){
    	// Return TRUE if
    	// 1) we are placed on the right-hand side of the field, or
    	// 2) if we are in camera mode... in which case we want the default/specified angle and NOT an inverted value!
    	// (If we are on left side and not in Camera mode, return false, which will invert the turn direction)
        boolean cond = (
        		(Robot.fieldPositionChooser.getSelected() == "Far Right") ||
        		(Robot.fieldPositionChooser.getSelected() == "Mid Right") ||
        		(m_mode == DriveTrain.kCamera));
        System.out.println("ConditionalTurn will use the is" + cond + " branch");
        return cond;
    }
    
    private int m_mode;
}
